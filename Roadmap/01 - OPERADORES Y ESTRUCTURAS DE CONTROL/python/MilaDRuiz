'''
Operadores
'''
# Operadores aritméticos

print(f"Suma: 10 + 3 = {10 + 3}")
print(f"Resta: 10 - 3 = {10 - 3}")
print(f"Mulplicación: 10 * 3 = {10 * 3}")
print(f"División: 12 + 3 = {12 / 3}")
print(f"Módulo: 10 % 3 = {10 % 3}")
print(f"Exponente: 10 ** 3 = {10 ** 3}")
print(f"División entera: 12 // 3 = {12 // 3}")

valor1 = 10
valor2 = 3
resul_suma = valor1 + valor2
print(f"El resultado de la suma es {resul_suma}")

''' La 'f' nos sirve para interpolar valores, es una manera de 
imprimir una cadena de texto en la que colocaremos código '''

#Operadores de comparación

print(f"Igualdad: 10 == 3 es {10 == 3}")
print(f"Desigualdad: 10 != 3 es {10 != 3}")
print(f"Mayor que: 10 > 3 es {10 > 3}")
print(f"Menor que: 10 < 3 es {10 < 3}")
print(f"Mayor o igual que: 10 >= 3 es {10 >= 3}")
print(f"Menor o igual que: 10 <= 3 es {10 <= 3}")

#Operadores lógicos
print(f"AND: 10 + 3 == 13 and 5 - 1 == 4 {10 + 3 == 13 and 5 - 1 == 4}") #Si ambas condiciones son verdaderas, es True
print(f"OR ||: 10 + 3 == 13 and 6 - 1 == 4 {10 + 3 == 13 or 6 - 1 == 4}") #Si una de las dos es verdadera, es True
print(f"NOT !: not 10 + 3 == 14 es {not 10 + 3 == 14}")

#Operadores de asignación

my_number = 11 #asignación
print(my_number)

my_number += 5 # Suma y asignación
print(my_number)

my_number -= 1 # Resta y asignación
print(my_number)

my_number *= 4 # Multiplicación y asignación
print(my_number)

my_number /= 3 # División y asignación
print(my_number)

my_number %= 2 # Módulo y asignación
print(my_number)

my_number **= 3 # Exponente y asignación
print(my_number)

my_number //= 2 # División entera y asignación
print(my_number)

#Operadores de identidad
'''
Nos sirve para calcular el valor de la posición en memoria
'''
nuevo_numero = 1.0
print(f"My_number es nuevo_número es = {my_number is nuevo_numero}")

'''
Aunque las variables tienes el mismo valor, ocupan diferentes
dimensiones de memoria
'''
nuevo_numero = my_number
print(f"My_number es nuevo_numero es = {my_number is nuevo_numero}")
print(f"My_number no es nuevo_numero es = {my_number is not nuevo_numero}")

#Operadores de pertenencia
'''
Si quiero comprobar que la letra u está en moure
'''
print(f"'u' in 'moure' = {'u' in 'moure'}")
print(f"'b' not in 'moure' = {'b' not in 'moure'}")

#Operadores de bit
a = 10 # 1010
b = 3 # 0011

print(f"AND: 10 & 3 = {10 & 3}") #0010 Compara bit a bit y si ambos valores son 1, entonces es 1, de lo contrario, es 0
print(f"OR: 10 | 3 = {10 | 3}") #1011 Compara bit a bit y si al menos 1 de los dos bits es 1, entonces es 1
print(f"XOR: 10 ^ 3 = {10 ^ 3}") #1001 Compara bit a bit y si los bits son diferentes, es 1; si son iguales, es 0
print(f"NOT: ~10 = {~10}") #1001 Invierte bit a bit 
print(f"Desplazamiento a la derecha: 10 >> 2 = {10 >> 2}")
print(f"Desplazamiento a la izquierda: 10 << 2 = {10 << 2}")

'''
Estructuras de control
'''
#Condicionales

my_string = "MoureDevvvv"

if my_string == "MoureDev":
    print("my_string es 'MoureDev'")
elif my_string == "Brais":
    print("my_string es 'Brais'")
else:
    print("my_string no es 'MoureDev' ni 'Brais'")

#Iterativas (ciclos)

for i in range (11):
    print(i)

'''planteamos una condición para que el bucle se ejecute mientras
esa condición sea verdadera
'''

i = 0

while i <= 10:
    print(i)
    i += 1

# Manejo de excepciones
try:
    print(10 / 0)
except:
    print("Se ha producido un error")
finally:
    print("Ha finalizado el manejo de excepciones")  

'''EXTRA'''

for number in range(10, 56):
    if number % 2 == 0 and number != 16 and number % 3 != 0:
        print(number)
